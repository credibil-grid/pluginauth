name: Release

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    # defaults:
    #   run:
    #     working-directory: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ">=1.20"

      - name: Check and get dependencies
        run: |
          go mod download
          go mod vendor
          go test -v ./...

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      # increment release
      - name: Latest release
        id: prev-tag
        uses: actions/github-script@v6
        with:
          script: |
            const resp = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            return resp.data.tag_name
          result-encoding: string

      # increment repo version tag
      - run: npm install semver
      - name: Increment version
        uses: actions/github-script@v6
        if: |
          !contains(github.event.head_commit.message, '[skip]')
        with:
          script: |
            const semver = require('semver')

            const latest = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })

            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${semver.inc(latest.data.tag_name, 'patch')}`
            })

      # - name: Install Yaegi ${{ env.YAEGI_VERSION }}
      #   run: curl -sfL https://raw.githubusercontent.com/traefik/yaegi/master/install.sh | bash -s -- -b $(go env GOPATH)/bin ${YAEGI_VERSION}

      # - name: Run tests with Yaegi
      #   run: make yaegi_test
      #   env:
      #     GOPATH: ${{ github.workspace }}/go
